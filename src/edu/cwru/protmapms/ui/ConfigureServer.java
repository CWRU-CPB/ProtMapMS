/*

 Copyright (C) Case Western Reserve University, 2014. All rights reserved. 
 This source code and documentation constitute proprietary information
 belonging to Case Western Reserve University. None of the foregoing
 material may be copied, duplicated or disclosed without the express
 written permission of Case Western Reserve University.

 CASE WESTERN RESERVE UNIVERSITY EXPRESSLY DISCLAIMS ANY
 AND ALL WARRANTIES CONCERNING THIS SOURCE CODE AND DOCUMENTATION,
 INCLUDING ANY WARRANTIES OF MERCHANTABILITY AND/OR FITNESS
 FOR ANY PARTICULAR PURPOSE, AND WARRANTIES OF PERFORMANCE,
 AND ANY WARRANTY THAT MIGHT OTHERWISE ARISE FROM COURSE OF
 DEALING OR USAGE OF TRADE. NO WARRANTY IS EITHER EXPRESS OR
 IMPLIED WITH RESPECT TO THE USE OF THE SOFTWARE OR
 DOCUMENTATION.
 
 Under no circumstances shall University be liable for incidental, special,
 indirect, direct or consequential damages or loss of profits, interruption
 of business, or related expenses which may arise from use of source code or 
 documentation, including but not limited to those resulting from defects in
 source code and/or documentation, or loss or inaccuracy of data of any kind.

 */
package edu.cwru.protmapms.ui;

import edu.cwru.sb4j.http.Sb4jHttpClient;
import edu.cwru.sb4j.http.Sb4jHttpException;
import edu.cwru.sb4j.http.Sb4jHttpResponse;

import java.io.FileWriter;

/**
 *
 * @author sean-m
 */
public class ConfigureServer extends javax.swing.JFrame {

    /**
     * Creates new form ConfigureServer
     */
    public ConfigureServer() {
        initComponents();
        saveButton.setEnabled(false);
        try {
            ServerConfig sc = ServerConfig.loadServerConfig("server.config");
            if(sc == null) return;
            locationInput.setText(sc.getLocation());
            pinInput.setText(sc.getPin());
        }
        catch(Exception e) {
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        locationInput = new javax.swing.JTextField();
        testButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        statusL = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        pinInput = new javax.swing.JTextField();

        setTitle("ProtMapMS - Server Configuration");
        setResizable(false);

        jLabel1.setText("Location");

        testButton.setText("Test");
        testButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                testButtonActionPerformed(evt);
            }
        });

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        statusL.setText("     ");

        jLabel2.setFont(new java.awt.Font("Ubuntu", 2, 15)); // NOI18N
        jLabel2.setText("e.g. http://192.168.1.104:80/protmap/");

        jLabel3.setText("PIN");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(statusL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(testButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(locationInput)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 321, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pinInput, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(locationInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(pinInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(testButton)
                    .addComponent(saveButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(statusL))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void testButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_testButtonActionPerformed
        String url = locationInput.getText();
        String pin = pinInput.getText();
        if(url.isEmpty()) {
            statusL.setText("Test failed: must specify a location");
            saveButton.setEnabled(false);
            return;
        }
        
        if(pin.isEmpty()) {
            statusL.setText("Test failed: must specify a PIN");
            saveButton.setEnabled(false);
            return;
        }
        
        if(!url.endsWith("/")) {
            url += "/";
        }
        url += "index.php";
        
        String testLocation = url+"?test=true&pin="+pin;
        
        try {
            Sb4jHttpClient client = new Sb4jHttpClient();
            Sb4jHttpResponse response = client.get(testLocation);
            /* Test service (host and path to PHP file are correct) */
            if(!response.getBody().equals("1\n")) {
                statusL.setText("Test failed: server response does not match expected");
                System.out.printf("response=\"%s\"\n",response.getBody());
                saveButton.setEnabled(false);
                return;
            }
            
            /* Test PUT works, as it requires permissions ot be set correctly 
             * on the server */
            String putTest=url+"?project=A&file=B.js&pin="+pin;
            String testToken = String.format("prott%d",System.currentTimeMillis());
            client.put(putTest,testToken);
            response = client.get(url+"?project=A&file=B.js&pin="+pin);
            
            if(!testToken.equals(response.getBody())) {
                statusL.setText("Test failed: server response does not match PUT test");
                System.out.printf("response=\"%s\" expecting %s\n",response.getBody(),testToken);
                saveButton.setEnabled(false);
                return;
            }
            
            /* DELETE Test file */
            response = client.get(url+"?delete=A&pin="+pin);

            /* All OK */
            statusL.setText("Test OK: Click \"Save\" to set this as the destination server");
            saveButton.setEnabled(true);
        }
        catch(Sb4jHttpException e) {
            statusL.setText("Test failed: Response status="+e.getStatus()+", message="+e.getMessage());
        }
        catch(Exception e) {
            statusL.setText("Test failed: "+e.toString());
        }
    }//GEN-LAST:event_testButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        String url = locationInput.getText();
        String pin = pinInput.getText();
        if(url.isEmpty()) {
            statusL.setText("Test failed: must specify a location");
            return;
        }
        
        if(pin.isEmpty()) {
            statusL.setText("Test failed: must specify a PIN");
            return;
        }
        
        try {
            ServerConfig sc = new ServerConfig().setLocation(url).setPin(pin);
            ServerConfig.saveServerConfig(sc, "server.config");
            statusL.setText("Save OK");
        }
        catch(Exception e) {
            statusL.setText("Save failed: could not save configuration");
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConfigureServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConfigureServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConfigureServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConfigureServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConfigureServer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField locationInput;
    private javax.swing.JTextField pinInput;
    private javax.swing.JButton saveButton;
    private javax.swing.JLabel statusL;
    private javax.swing.JButton testButton;
    // End of variables declaration//GEN-END:variables
}
